/* stage 1 */
ancestor_path(parent, child) :- child_path(child, parent).
path_moved_at(path, point) :- path_moved_at_base(path, point).
path_assigned_at(path, point) :- path_assigned_at_base(path, point).
path_accessed_at(path, point) :- path_accessed_at_base(path, point).
path_begins_with_var(path, var) :- path_is_var(path, var).

ancestor_path(grandparent, child) :-
   ancestor_path(parent, child),
   child_path(parent, grandparent).

path_moved_at(child, point) :-
    path_moved_at(parent, point),
    ancestor_path(parent, child).

path_assigned_at(child, point) :-
    path_assigned_at(parent, point),
    ancestor_path(parent, child).

path_accessed_at(child, point) :-
  path_accessed_at(parent, point),
  ancestor_path(parent, child).

path_begins_with_var(child, var) :-
  path_begins_with_var(parent, var),
  ancestor_path(parent, child).


/* stage 2 */
path_maybe_initialized_on_exit(path, point) :- path_assigned_at(path, point).

path_maybe_initialized_on_exit(path, point2) :-
    path_maybe_initialized_on_exit(path, point1),
    cfg_edge(point1, point2),
    \+ path_moved_at(path, point2).

path_maybe_uninitialized_on_exit(path, point) :- path_moved_at(path, point).

path_maybe_uninitialized_on_exit(path, point2) :-
    path_maybe_uninitialized_on_exit(path, point1),
    cfg_edge(point1, point2),
    \+ path_assigned_at(path, point2).

/* todo
 move_error(path, targetnode) :- 
    path_maybe_uninitialized_on_exit(path, targetnode), 
    path_accessed_at(path, targetnode). */
move_error(path, targetnode) :-
  path_maybe_uninitialized_on_exit(path, sourcenode),
  cfg_edge(sourcenode, targetnode),
  path_accessed_at(path, targetnode).

var_maybe_partly_initialized_on_exit(var, point) :-
    path_maybe_initialized_on_exit(path, point),
    path_begins_with_var(path, var).

/*
return move_error, var_maybe_partly_initialized_on_exit

var_maybe_partly_initialized_on_exit, var_maybe_partly_uninitialized_on_exit 之所以是maybe,因为在同一点可能既是
var_maybe_partly_initialized_on_exit, 又是 var_maybe_partly_uninitialized_on_exit 

因为从两个分支过来的
*/
